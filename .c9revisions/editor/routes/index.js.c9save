{"ts":1356085023593,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var db;\n\nfunction mongoConnect() {\n  var mongodb = require(\"mongodb\"),\n    mongoserver = new mongodb.Server('127.0.0.1', 27017, {auto_reconnect: true}),\n    db_connector = new mongodb.Db('achi', mongoserver, '');\n\n  db_connector.open(function(err, dbs) {\n    db = dbs;\n  });\n}\n\nmongoConnect();\n\nexports.index = function(req, res){\n  res.render('index.ect', { title: 'Express' });\n};\n\nexports.editor_api = function(req, res) {\n  \n  if(req.body.command == 'get_service_list') {\n    db.collection('achievements', function(err, collection) {\n      collection.distinct('service', function(err, doc) {\n        var data = JSON.stringify({data: doc});\n        res.contentType('json');\n        res.end(data);\n      });\n    });\n  }\n\n  if(req.body.command == 'get_achiv_list') {\n    db.collection('achievements', function(err, collection) {\n      collection.find({service:req.body.service},{sort: 'position'}).toArray(function(err, doc) {\n        var data = JSON.stringify({data: doc});\n        res.contentType('json');\n        res.end(data);\n      });\n    });\n  }\n\n  if(req.body.command == 'add_new_achiv') {\n    db.collection('achievements', function(err, collection) {\n      collection.insert({aid:req.body.aid, name:req.body.name, description:req.body.description, position: parseInt(req.body.position), service:req.body.service, points:parseInt(req.body.service.points), icon:req.body.icon},function(err, doc) {});\n      res.redirect('http://achivster.com:3000/');\n    });\n  }\n\n  if(req.body.command == 'delete_row') {\n    db.collection('achievements', function(err, collection) {\n      collection.remove({aid:req.body.aid}, function(err, doc) {});\n      res.end();\n    });\n  }\n\n  if(req.body.command == 'edit_achiv') {\n    db.collection('achievements', function(err, collection) {\n      collection.update({aid:req.body.aid},{$set:{name:req.body.name, description:req.body.description, position:parseInt(req.body.position), points:parseInt(req.body.points), icon:req.body.icon}}, function(err, doc) {});\n      res.redirect('http://achivster.com:3000/');\n    });\n  }\n  \n  if(req.body.command === 'get_users_list') {\n    db.collection('users', function(err, collection) {\n      collection.find({}).toArray(function(err, doc) {\n        var data = JSON.stringify({data: doc});\n        res.contentType('json');\n        res.end(data);\n      });\n    });\n  }\n  \n  if(req.body.command === 'remove_user') {\n    var uid = req.body.uid;\n    db.collection('users', function(err,collection) {\n    collection.remove({uid: uid}, function(err, doc) {\n      db.collection('users_profile', function(err,profiles) {\n        profiles.remove({uid: uid}, function(err, doc) {\n          db.collection('services_connections', function(err, services_connections) {\n            services_connections.insert({uid: uid}, function(err, doc) {\n              db.collection('users_achievements', function(err, users_achievements) {  \n                users_achievements.insert({uid: uid}, function(err, doc) {});\n                var data = JSON.stringify({});\n                res.contentType('json');\n                res.end(data);\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n  }\n};"]],"start1":0,"start2":0,"length1":0,"length2":3181}]],"length":3181}
{"contributors":[],"silentsave":false,"ts":1356085056568,"patch":[[{"diffs":[[0,"ections."],[-1,"insert"],[1,"remove"],[0,"({uid: u"]],"start1":2758,"start2":2758,"length1":22,"length2":22},{"diffs":[[0,"vements."],[-1,"insert"],[1,"remove"],[0,"({uid: u"]],"start1":2921,"start2":2921,"length1":22,"length2":22}]],"length":3181,"saved":false}
