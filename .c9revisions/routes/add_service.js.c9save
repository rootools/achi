{"ts":1356084169037,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var config = require('../configs/config.js');\nvar https = require('https');\nvar querystring = require('querystring');\n\nvar oauth = require('oauth').OAuth;\n\nvar twitterOA = new oauth(\n  'https://api.twitter.com/oauth/request_token',\n  'https://api.twitter.com/oauth/access_token',\n  'CXWNIxTwg8vyTmtETDbPMA',\n  'd4rgsi9dvbMhUgYVT3kbQD0L9lZ8I8NO8dG2oqOHY',\n  '1.0',\n  config.site.url+'add_service/twitter',\n  'HMAC-SHA1'\n);\n\nvar db;\n\nfunction mongoConnect() {\n  var mongodb = require(\"mongodb\"),\n    mongoserver = new mongodb.Server(config.mongo.host, config.mongo.port, config.mongo.server_config),\n    db_connector = new mongodb.Db(config.mongo.db, mongoserver, config.mongo.connector_config);\n\n  db_connector.open(function(err, dbs) {\n    db = dbs;\n  });\n}\n\nmongoConnect();\n\nexports.vk = function(req, res) {\n  if(!req.query.code) {\n    res.redirect('http://oauth.vk.com/authorize?client_id=3126840&scope=notify,friends,photos,audio,video,status,wall,groups,notifications,offline&display=popup&response_type=code&tt=12&redirect_uri='+config.site.url+'add_service/vkontakte');\n  } \n  if(req.query.code) {\n    var options = {\n      host: 'oauth.vk.com',\n      method: 'GET',\n      path: '/access_token?client_id=3126840&client_secret=nlKuMIbXcEV6HqLn1W1n&code='+req.query.code+'&redirect_uri='+config.site.url+'add_service/vkontakte&'\n    };\n\n    var callback = function(response) {\n      var str = '';\n\n      response.on('data', function(chunk) {\n        str += chunk;\n      });\n\n      response.on('end', function() {\n        var data = JSON.parse(str);\n        delete data.expires_in;\n        add_service(req.session, data, 'vkontakte');\n      });\n    };\n\n    https.request(options, callback).end();\n    res.redirect(config.site.url+'profile');\n  }\n};\n\nexports.twitter = function(req, res) {\n  if(req.query.oauth_token) {\n    twitterOA.getOAuthAccessToken(req.query.oauth_token, req.session.request_twitter_oauth_token_secret, req.query.oauth_verifier, function(err, oauth_token, oauth_token_secret, results) {\n      var data = {oauth_token: oauth_token, oauth_token_secret: oauth_token_secret, user_id: results.user_id, screen_name: results.screen_name };\n      add_service(req.session, data, 'twitter');\n      delete req.session.twitter_request_oauth_token_secret;\n      res.redirect(config.site.url+'profile');\n    });\n  } else {\n\n    twitterOA.getOAuthRequestToken(function(error, request_oauth_token, request_oauth_token_secret, results){\n      req.session.twitter_request_oauth_token_secret = request_oauth_token_secret;\n      res.redirect('https://api.twitter.com/oauth/authorize?oauth_token='+request_oauth_token);\n    });\n  }\n}\n\nexports.facebook = function(req, res) {\n  if(!req.query.code) {  \n    res.redirect('https://www.facebook.com/dialog/oauth?client_id=258024554279925&redirect_uri='+config.site.url+'add_service/facebook&state=123&scope=publish_actions,user_photos,user_likes,read_stream');\n  } \n  if(req.query.code) {\n    var code = req.query.code;\n\n    var options = {\n      host: 'graph.facebook.com',\n      method: 'GET',\n      path: '/oauth/access_token?client_id=258024554279925&redirect_uri='+config.site.url+'add_service/facebook&client_secret=7ae18b84811c2b811dd11d31050f2e4e&code='+req.query.code\n    }\n\n    var callback = function(response) {\n      var str = '';\n\n      response.on('data', function(chunk) {\n        str += chunk;\n      });\n\n      response.on('end', function() {\n        var data = querystring.parse(str).access_token;\n        add_service(req.session, data, 'facebook');\n      });\n    }\n\n    https.request(options, callback).end();\n    res.redirect(config.site.url+'profile');\n  }\n}\n\nfunction add_service(session, account, service) {\n  testService(session.uid, service, function(check) {\n    db.collection('services_connections', function(err,collection) {\n    db.collection('users_achievements', function(err, ua_collection) {\n      if(check === true) {\n        collection.insert({uid: session.uid, service:service, service_login: account, addtime:new Date().getTime(), valid: true, lastupdate: new Date().getTime() - 1800000}, function(err, doc) {});\n        ua_collection.insert({uid:session.uid, service:service, achievements: []}, function(err, doc) {});\n      } else {\n        collection.update({uid: session.uid, service:service},{$set: {service_login: account, valid: true}}, function(err,doc) {});\n      }\n    });\n    });\n  });\n}\n\nfunction testService(uid, service, cb) {\n  db.collection('services_connections', function(sc_err,sc_collection) {\n  db.collection('users_achievements', function(ua_err, ua_collection) {\n    sc_collection.findOne({uid: uid}, function(sc_err, sc_doc) {\n    for(var i in sc_doc) {\n      if(sc_doc[i].service === service) {\n        cb(false);\n      }\n    }\n    ua_collection.findOne({uid: uid, service:service}, function(ua_err, ua_doc) {\n      if(sc_err === null && sc_doc === null && ua_err === null && ua_doc === null) {\n        cb(true);\n      } else {\n        cb(false);\n      }\n    });\n    });\n  });\n  });\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":4996}]],"length":4996}
{"contributors":[],"silentsave":false,"ts":1356084324913,"patch":[[{"diffs":[[0,"_collection.find"],[-1,"One"],[0,"({uid: uid}, fun"]],"start1":4578,"start2":4578,"length1":35,"length2":32},{"diffs":[[0,"id: uid}"],[-1,", "],[1,").toArray("],[0,"function"]],"start1":4597,"start2":4597,"length1":18,"length2":26}]],"length":5001,"saved":false}
{"ts":1356084381271,"patch":[[{"diffs":[[0,"l &&"],[-1," sc_doc === null &&"],[0," ua_"]],"start1":4849,"start2":4849,"length1":27,"length2":8}]],"length":4982,"saved":false}
{"ts":1356084558575,"patch":[[{"diffs":[[0,"ystring');\n\n"],[1,"var ext_achivster = require('../external/achivster.js');\n\n"],[0,"var oauth = "]],"start1":107,"start2":107,"length1":24,"length2":82},{"diffs":[[0,"    }\n    }\n"],[1,"    // Earned achiv\n    if(sc_doc.length = 1) {\n      ext_achivster.main(uid, '');\n    }\n    \n    \n"],[0,"    ua_colle"]],"start1":4790,"start2":4790,"length1":24,"length2":123}]],"length":5139,"saved":false}
{"ts":1356084668609,"patch":[[{"diffs":[[0,"length ="],[1,"=="],[0," 1) {\n  "]],"start1":4836,"start2":4836,"length1":16,"length2":18},{"diffs":[[0,"n(uid, '"],[1,"eSkuacz7tW1yUayFp1Xes710UNc8u1"],[0,"');\n    "]],"start1":4875,"start2":4875,"length1":16,"length2":46}]],"length":5171,"saved":false}
{"ts":1356084680047,"patch":[[{"diffs":[[0," }\n    \n"],[-1,"    \n"],[0,"    ua_c"]],"start1":4920,"start2":4920,"length1":21,"length2":16}]],"length":5166,"saved":false}
{"ts":1356085007531,"patch":[[{"diffs":[[0,"ed achiv"],[1," for first service"],[0,"\n    if("]],"start1":4813,"start2":4813,"length1":16,"length2":34}]],"length":5184,"saved":false}
