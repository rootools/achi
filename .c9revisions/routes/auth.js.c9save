{"ts":1356084499298,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var config = require('../configs/config.js');\nvar locale = require('../configs/locale/main.js');\nvar ext_achivster = require('../external/achivster.js');\n\nvar geoip = require('geoip-lite');\nvar randomstring = require('randomstring');\nvar db;\n\nfunction mongoConnect() {\n  var mongodb = require(\"mongodb\"),\n    mongoserver = new mongodb.Server(config.mongo.host, config.mongo.port, config.mongo.server_config),\n    db_connector = new mongodb.Db(config.mongo.db, mongoserver, config.mongo.connector_config);\n\n  db_connector.open(function(err, dbs) {\n    db = dbs;\n  });\n}\n\nmongoConnect();\n\nexports.login = function(req, res) {\n  console.log(req.session);\n  var region = '';\n  //var region = geoip.lookup(req.connection.remoteAddress).country;\n  db.collection('users', function(err,collection) {\n    if(req.session.auth && req.session.auth === true) {\n      res.redirect(config.site.url);\n    }\n\n    if(req.body.action === 'login') {\n      collection.findOne({email: req.body.email}, function(err, doc) {\n        if(doc !== null) {\n          if(req.body.pass === doc.password) {\n            add_session(req, doc.uid, doc.email, region, function() {\n              res.end(JSON.stringify({}));\n            });\n          } else {\n            res.end(JSON.stringify({error: locale.errors.err1.eng}));\n          }\n        } else {\n          res.end(JSON.stringify({error: locale.errors.err1.eng}));\n        }\n      });\n    } else if(req.body.action === 'reg') {\n      testUser(req.body.email, function(flag) {\n        if(flag === true) {\n          registerUser(req.body.email, req.body.pass, region, req, function(){\n            res.end(JSON.stringify({}));\n          });\n        } else {\n          res.end(JSON.stringify({error: locale.errors.err2.eng}));\n        } \n      });\n    } else {\n      res.render('login.ect', { title: 'Login' });\n    }\n  });\n};\n\nfunction testUser(email, cb) {\n  db.collection('users', function(err,collection) {\n    collection.findOne({email: email}, function(err, doc) {\n      if(doc !== null) { \n        cb(false);\n      } else {\n        cb(true);\n      }\n    });\n  });  \n}\n\nfunction registerUser(email, pass, region, req, cb) {\n  var uid = randomstring.generate(20);\n  db.collection('users', function(err,collection) {\n    collection.insert({email: email, password: pass, uid: uid}, function(err, doc) {\n      db.collection('users_profile', function(err,profiles) {\n        profiles.insert({uid: uid, name: '', photo: '/images/label.png', friends: []}, function(err, doc) {\n          db.collection('services_connections', function(err, services_connections) {\n            services_connections.insert({uid: uid, service: 'achivster', service_login: '', addtime: new Date().getTime(), valid: true, lastupdate: new Date().getTime() - 1800000}, function(err, doc) {\n              db.collection('users_achievements', function(err, users_achievements) {  \n                users_achievements.insert({uid: uid, service: 'achivster', achievements: []}, function(err, doc) {});\n                ext_achivster.main(uid, 'klxNE51gc8k3jGZYd2i0wAZAPMDviG');\n                add_session(req, uid, email, region, function() {\n                  cb();\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n}\n\nfunction add_session(req, uid, email, lang, cb) {\n  req.session.auth = true;\n  req.session.uid = uid;\n  req.session.email = email;\n  req.session.lang = lang;\n  cb();\n}\n\nexports.logout = function(req, res) {\n  req.session.auth = false;\n  res.redirect(config.site.url);\n};\n"]],"start1":0,"start2":0,"length1":0,"length2":3534}]],"length":3534}
